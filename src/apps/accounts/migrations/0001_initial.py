# Generated by Django 4.2.16 on 2025-01-06 07:32

import accounts.utils
import accounts.validators.validators_user_model
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(blank=True, null=True, verbose_name="last login"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        validators=[
                            accounts.validators.validators_user_model.NotEmptyValidator.validate,
                            accounts.validators.validators_user_model.NameValidator.validate,
                        ],
                        verbose_name="Имя",
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True,
                        validators=[
                            accounts.validators.validators_user_model.NotEmptyValidator.validate,
                            accounts.validators.validators_user_model.NameValidator.validate,
                        ],
                        verbose_name="Фамилия",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254,
                        unique=True,
                        validators=[
                            accounts.validators.validators_user_model.NotEmptyValidator.validate,
                            accounts.validators.validators_user_model.EmailValidator.validate,
                        ],
                        verbose_name="Email",
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        validators=[
                            accounts.validators.validators_user_model.NotEmptyValidator.validate,
                            accounts.validators.validators_user_model.MinimumLengthValidator.validate,
                            accounts.validators.validators_user_model.UppercaseLetterValidator.validate,
                            accounts.validators.validators_user_model.NumericCharacterValidator.validate,
                            accounts.validators.validators_user_model.SpecialSymbolValidator.validate,
                        ],
                        verbose_name="Пароль",
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        upload_to=accounts.utils.avatar_upload_to,
                        validators=[
                            accounts.validators.validators_user_model.ImageValidator.validate
                        ],
                        verbose_name="Аватар",
                    ),
                ),
                ("is_admin", models.BooleanField(default=False, verbose_name="Администратор")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь",
                "verbose_name_plural": "Пользователи",
                "db_table": "accounts_user",
                "ordering": ("id",),
            },
        ),
    ]
